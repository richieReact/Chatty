{"ast":null,"code":"var _jsxFileName = \"/Users/richardchannell/Projects/simple-mern-project copy/frontend/src/components/containers/Data.js\";\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io';\nimport Chatty from '../../Pages/Chatty';\n\nconst Data = props => {\n  //Database Stuff here\n  const [yourID, setYourID] = useState();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = io.connect('./');\n    socketRef.current.on(\"your id\", id => {\n      setYourID(id);\n    });\n    socketRef.current.on(\"message\", message => {\n      recievedMessage(message);\n    });\n  });\n\n  function recievedMessage(message) {\n    setMessages(oldMsgs => [...oldMsgs, message]);\n  }\n\n  function sendMessage(e) {\n    e.preventDefault();\n    const messageObject = {\n      body: message,\n      id: yourID\n    };\n    setMessage(\"\");\n    socketRef.current.emit(\"send message\", messageObject);\n  }\n\n  function handleChange(e) {\n    setMessage(e.target.value);\n  }\n\n  return (\n    /*#__PURE__*/\n    //Send down the info, render the chat shit\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, messages.map((message, index) => {\n      if (message.id === yourID) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 37\n          }\n        }, message.body));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }\n      }, message.body));\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: sendMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      value: message,\n      onChange: handleChange,\n      placeholder: \"Say something...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    })))\n  );\n};\n\nexport default Data;","map":{"version":3,"sources":["/Users/richardchannell/Projects/simple-mern-project copy/frontend/src/components/containers/Data.js"],"names":["React","useState","useEffect","io","Chatty","Data","props","yourID","setYourID","messages","setMessages","message","setMessage","socketRef","useRef","current","connect","on","id","recievedMessage","oldMsgs","sendMessage","e","preventDefault","messageObject","body","emit","handleChange","target","value","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,WAAf;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAElB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,EAApC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMY,SAAS,GAAGC,MAAM,EAAxB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACbW,IAAAA,SAAS,CAACE,OAAV,GAAoBZ,EAAE,CAACa,OAAH,CAAW,IAAX,CAApB;AAEAH,IAAAA,SAAS,CAACE,OAAV,CAAkBE,EAAlB,CAAqB,SAArB,EAAgCC,EAAE,IAAI;AAClCV,MAAAA,SAAS,CAACU,EAAD,CAAT;AACH,KAFD;AAKAL,IAAAA,SAAS,CAACE,OAAV,CAAkBE,EAAlB,CAAqB,SAArB,EAAiCN,OAAD,IAAa;AAC5CQ,MAAAA,eAAe,CAACR,OAAD,CAAf;AACA,KAFD;AAGF,GAXQ,CAAT;;AAaA,WAASQ,eAAT,CAAyBR,OAAzB,EAAkC;AAC9BD,IAAAA,WAAW,CAACU,OAAO,IAAI,CAAC,GAAGA,OAAJ,EAAaT,OAAb,CAAZ,CAAX;AACH;;AAED,WAASU,WAAT,CAAqBC,CAArB,EAAwB;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,aAAa,GAAG;AAClBC,MAAAA,IAAI,EAAEd,OADY;AAElBO,MAAAA,EAAE,EAAEX;AAFc,KAAtB;AAIAK,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAC,IAAAA,SAAS,CAACE,OAAV,CAAkBW,IAAlB,CAAuB,cAAvB,EAAuCF,aAAvC;AACH;;AAED,WAASG,YAAT,CAAsBL,CAAtB,EAAyB;AACrBV,IAAAA,UAAU,CAACU,CAAC,CAACM,MAAF,CAASC,KAAV,CAAV;AACH;;AAED;AAAA;AACA;AACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKpB,QAAQ,CAACqB,GAAT,CAAa,CAACnB,OAAD,EAAUoB,KAAV,KAAoB;AAC9B,UAAIpB,OAAO,CAACO,EAAR,KAAeX,MAAnB,EAA2B;AACvB,4BACI;AAAK,UAAA,GAAG,EAAEwB,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKpB,OAAO,CAACc,IADb,CADJ,CADJ;AAOH;;AACD,0BACI;AAAK,QAAA,GAAG,EAAEM,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKpB,OAAO,CAACc,IADb,CADJ,CADJ;AAOH,KAjBA,CADL,CADJ,eAqBI;AAAM,MAAA,QAAQ,EAAEJ,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAU,MAAA,KAAK,EAAEV,OAAjB;AAA0B,MAAA,QAAQ,EAAEgB,YAApC;AAAkD,MAAA,WAAW,EAAC,kBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CArBJ;AAFR;AA4BH,CApED;;AAsEA,eAAetB,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io';\n\nimport Chatty from '../../Pages/Chatty';\n\nconst Data = props => {\n\n    //Database Stuff here\n    const [yourID, setYourID] = useState();\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState([]);\n\n    const socketRef = useRef();\n\n    useEffect(() => {\n       socketRef.current = io.connect('./');\n       \n       socketRef.current.on(\"your id\", id => {\n           setYourID(id);\n       })\n\n\n       socketRef.current.on(\"message\", (message) => {\n        recievedMessage(message);\n       })\n    });\n\n    function recievedMessage(message) {\n        setMessages(oldMsgs => [...oldMsgs, message]);\n    }\n\n    function sendMessage(e) {\n        e.preventDefault();\n        const messageObject = {\n            body: message,\n            id: yourID,\n        };\n        setMessage(\"\")\n        socketRef.current.emit(\"send message\", messageObject);\n    }\n\n    function handleChange(e) {\n        setMessage(e.target.value);\n    }\n\n    return (\n    //Send down the info, render the chat shit\n            <div>\n                <div>\n                    {messages.map((message, index) => {\n                        if (message.id === yourID) {\n                            return (\n                                <div key={index}>\n                                    <div>\n                                        {message.body}\n                                    </div>\n                                </div>\n                            )\n                        }\n                        return (\n                            <div key={index}>\n                                <div>\n                                    {message.body}\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n                <form onSubmit={sendMessage}>\n                    <textarea value={message} onChange={handleChange} placeholder=\"Say something...\" />\n                </form>\n            </div>\n    )\n}\n\nexport default Data;"]},"metadata":{},"sourceType":"module"}