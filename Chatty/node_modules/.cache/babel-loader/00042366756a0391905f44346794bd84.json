{"ast":null,"code":"var _jsxFileName = \"/Users/richardchannell/Projects/Chatty/Chatty/src/components/containers/Data.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './Data.css';\n\nconst Data = () => {\n  const [yourID, setYourID] = useState();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = io.connect('/'); // Sets your ID on connection\n\n    socketRef.current.on(\"your id\", id => {\n      setYourID(id);\n    });\n    console.log(\"socket connection worked\");\n    socketRef.current.on(\"message\", message => {\n      recievedMessage(message);\n    }); // put the GET request here\n  }, []);\n\n  function recievedMessage(message) {\n    setMessages(oldMsgs => [...oldMsgs, message]);\n  }\n\n  function sendMessage(e, content) {\n    e.preventDefault();\n    const messageObject = {\n      body: message,\n      id: yourID\n    };\n    setMessage(\"\");\n    socketRef.current.emit(\"send message\", messageObject); // this took so much for me to find. I big win for me.\n\n    fetch(\"/api/messages\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(messageObject)\n    }).then(res => {\n      return res.json();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleChange(e) {\n    setMessage(e.target.value);\n  }\n\n  return (\n    /*#__PURE__*/\n    //Send down the info, render the chat shit\n    React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, messages.map((message, index) => {\n      if (message.id === yourID) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"MyRow\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"MyMessage\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 37\n          }\n        }, message.body));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        style: {\n          justifyContent: 'flex-start'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"PartnerMessage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }\n      }, message.body));\n    }))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"Entry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: sendMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: message,\n      onChange: handleChange,\n      placeholder: \"Say something...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"Submit\"))))\n  );\n};\n\nexport default Data;","map":{"version":3,"sources":["/Users/richardchannell/Projects/Chatty/Chatty/src/components/containers/Data.js"],"names":["React","useState","useEffect","useRef","io","Data","yourID","setYourID","messages","setMessages","message","setMessage","socketRef","current","connect","on","id","console","log","recievedMessage","oldMsgs","sendMessage","e","content","preventDefault","messageObject","body","emit","fetch","method","headers","JSON","stringify","then","res","json","catch","err","handleChange","target","value","map","index","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\n\nimport './Data.css';\n\nconst Data = () => {\n\n  const [yourID, setYourID] = useState();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState([]);\n\n  const socketRef = useRef();\n\n  useEffect(() => {\n    socketRef.current = io.connect('/');\n       \n    // Sets your ID on connection\n    socketRef.current.on(\"your id\", id => {\n           setYourID(id);\n    })\n    console.log(\"socket connection worked\")\n    socketRef.current.on(\"message\", (message) => {\n    recievedMessage(message);\n    })\n    // put the GET request here\n}, []);\n\n  function recievedMessage(message) {\n    setMessages(oldMsgs => [...oldMsgs, message]);\n}\n    \n  function sendMessage(e, content) {\n    e.preventDefault();\n    const messageObject = {\n        body: message,\n        id: yourID,\n    };\n    setMessage(\"\")\n    socketRef.current.emit(\"send message\", messageObject);\n\n    // this took so much for me to find. I big win for me.\n    fetch(\"/api/messages\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(messageObject)\n    }).then((res) => {\n        return res.json();\n    }).catch((err) => {\n        console.log(err);\n    });\n  }\n    \n  function handleChange(e) {\n    setMessage(e.target.value);\n  }\n\n  return (\n    //Send down the info, render the chat shit\n    <React.Fragment>\n      <div className=\"Page\">\n        <div className=\"Container\">\n                {messages.map((message, index) => {\n                      if (message.id === yourID) {\n                            return (\n                                <div className=\"MyRow\" key={index}>\n                                    <div className=\"MyMessage\" >\n                                        {message.body}\n                                    </div>\n                                </div>\n                            )\n                        }\n                        return (\n                            <div key={index} style={{ justifyContent: 'flex-start' }} >\n                                <div className=\"PartnerMessage\" >\n                                    {message.body}\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n            <span className=\"Entry\">\n                <form onSubmit={sendMessage}>\n                    <input \n                    value={message} \n                    onChange={handleChange} placeholder=\"Say something...\" />\n                    <button className=\"Button\">\n                        Submit\n                    </button>\n                </form>\n            </span>\n        </React.Fragment>\n    )\n}  \n\nexport default Data;"]},"metadata":{},"sourceType":"module"}